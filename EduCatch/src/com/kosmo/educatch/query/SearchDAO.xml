<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kosmo.educatch.dao.SearchMapper">

	<!-- 지역 대분류 -->
	<select id="getDistrict" parameterType="search" resultType="search">
	SELECT DISTRICT
	FROM (SELECT ROWNUM, DISTRICT, RANK() OVER (PARTITION BY DISTRICT
    ORDER BY DISTRICT, CITY) AS RK FROM AREA ORDER BY 1)
    <![CDATA[ WHERE RK <= 1 ]]>
	</select>
	
	<!-- 지역 소분류 -->
	<select id="getCity" parameterType="search" resultType="search">
	SELECT CITY
	FROM (SELECT ROWNUM, A.DISTRICT, A.CITY
		FROM AREA A
		WHERE A.DISTRICT = #{district}
		ORDER BY ROWNUM)
 	</select>
	
	<select id="getAcaList" parameterType="academyview" resultType="academyview">
    SELECT
            E.PAGENO AS PAGENO				--페이지번호
           ,E.LISTCOUNT AS LISTCOUNT		--검색된 학원 개수
           ,E.ANO AS ANO					--학원번호
		   ,E.ANAME AS ANAME				--학원이름
		   ,E.ATEL AS ATEL					--학원전화번호
		   ,E.AADDR1 AS AADDR1				--학원주소
		   ,E.AADDR2 AS AADDR2				--학원상세주소
		   ,E.ALOGO AS ALOGO				--학원로고
           ,E.AGRADE AS AGRADE				--학원평점
		   ,E.CMAJOR AS CMAJOR				--학원 카테고리 대분류
		   ,E.CMINOR AS CMINOR				--학원 카테고리 소분류
		   ,E.AINSERTDATE AS AINSERTDATE	--학원 입력일
		   ,E.AUPDATEDATE AS AUPDATEDATE	--학원 수정일
           ,E.RVCOUNT AS RVCOUNT			--학원 리뷰 개수
    FROM   (SELECT      
            COUNT(C.ANO) OVER() AS LISTCOUNT --학원번호의 개수를 가져와서 가상의 컬럼 LISTCOUNT(학원개수)를 만듬
           ,CEIL(ROW_NUMBER() OVER(ORDER BY C.ANO) / 10 ) AS PAGENO --학원번호 10개씩 묶은 값을 가상의 컬럼 PAGENO(페이지번호)를 만듬
		   ,C.ANO AS ANO
		   ,C.ANAME AS ANAME
		   ,C.ATEL AS ATEL
		   ,C.AADDR1 AS AADDR1
		   ,C.AADDR2 AS AADDR2
		   ,C.ALOGO AS ALOGO
		   ,TRUNC(C.AGRADE,2) AS AGRADE --학원의 평점을 소수점 .00까지 포함하여 만듬
		   ,D.CMAJOR AS CMAJOR
		   ,D.CMINOR AS CMINOR
		   ,C.AINSERTDATE AS AINSERTDATE
		   ,C.AUPDATEDATE AS AUPDATEDATE
           ,C.RVCOUNT AS RVCOUNT
	FROM   (SELECT  NVL(AVG(B.RBGRADE),0) AS AGRADE --RBGRADE(리뷰)를 모두가져옴 NVL를 사용해서 0인 값도 가져오게 함
	               ,A.CATEGORY_CNO AS CNO
	               ,A.ANO AS ANO
	               ,A.ANAME AS ANAME
	               ,A.ATEL AS ATEL
	               ,A.AADDR1 AS AADDR1
	               ,A.AADDR2 AS AADDR2
	               ,A.ALOGO AS ALOGO
	               ,TO_CHAR(AINSERTDATE,'YYYY-MM-DD') AS AINSERTDATE
	               ,TO_CHAR(AUPDATEDATE,'YYYY-MM-DD') AS AUPDATEDATE
	               ,COUNT(A.ANO) OVER() AS LISTCOUNT 
                   ,COUNT(B.ACADEMY_ANO) AS RVCOUNT 
	        FROM   ACADEMY A, REVIEWBOARD B
	        WHERE  B.ACADEMY_ANO(+) = A.ANO
	        AND    A.ADELETEYN = 'N'
	        GROUP BY A.CATEGORY_CNO,A.ANAME,A.ANO,A.ATEL,A.AADDR1,A.AADDR2,A.ALOGO,AINSERTDATE
	        		,AUPDATEDATE,TO_CHAR(AINSERTDATE,'YYYY-MM-DD') ,TO_CHAR(AUPDATEDATE,'YYYY-MM-DD')) C, 
	        CATEGORY D
	WHERE C.CNO = D.CNO
	<!-- 검색기능 -->
	<if test="district!=null or city!=null or cmajor!=null or cminor!=null">
    AND
    <![CDATA[ C.AADDR1 LIKE '%'||#{district}||'%' ]]>
	AND
	<![CDATA[ C.AADDR1 LIKE '%'||#{city}||'%' ]]>
	AND
	<![CDATA[ D.CMAJOR LIKE '%'||#{cmajor}||'%' ]]>
	<if test="!cminor.equals('전체')">
	AND
	<![CDATA[ D.CMINOR LIKE '%'||#{cminor}||'%' ]]>
	</if>
	</if>
	<if test="aname!=null">
	AND
	<![CDATA[ C.ANAME LIKE '%'||#{aname}||'%' ]]>
	</if>
	) E
	<!-- 무한스크롤 -->
    <if test="scrollPage!=null">
	WHERE   E.PAGENO = #{scrollPage}
	</if>
	<!-- 필터설정 평점순 -->
	<if test="agrade!=null">
	ORDER BY AGRADE DESC
	</if>
	<!-- 필터설정 리뷰순 -->
	<if test="rvcount!=null">
	ORDER BY RVCOUNT DESC	
	</if>
	</select>
	
</mapper>
