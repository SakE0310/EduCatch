<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosmo.educatch.dao.DetailViewMapper">

	<select id="academyView" parameterType="String" resultType="academyview">
		
		SELECT
			    A.ANO,
			    A.ANAME,
			    A.ATEL,
			    A.AXPOINT,
			    A.AYPOINT,
			    A.AADDRNO,
			    A.AADDR1,
			    A.AADDR2,
			    A.ALOGO,
			    A.CATEGORY_CNO,
			    A.ADELETEYN,
			    TO_CHAR(A.AINSERTDATE,'YYYY-MM-DD') AS AINSERTDATE, 
			    TO_CHAR(A.AUPDATEDATE,'YYYY-MM-DD') AS AUPDATEDATE
		FROM 
				ACADEMY A
		WHERE A.ADELETEYN = 'N'
		AND A.ANO= #{ano, jdbcType=VARCHAR}
		ORDER BY 1 DESC
		
	</select>
	
	<select id="conView" parameterType="String" resultType="convenience">
		
		SELECT
			    A.ACADEMY_ANO,
                A.ACPARKING,
                A.ACSTORE,
                A.ACBUS,
                A.ACELEVATOR,
                A.ACSTUDYROOM,
                A.ACLOUNGE,
                A.ACLOCKER,
                B.ANO
		FROM 
				ACADEMY_CONVENIENCE A , ACADEMY B
		WHERE A.ACADEMY_ANO(+) = B.ANO
		AND ANO=#{ano, jdbcType=VARCHAR}	
		ORDER BY 1 DESC
		
	</select>
	
	
	<select id="gradeView" parameterType="String" resultType="academyview">
		SELECT
            NVL(TRUNC(AVG(A.RBGRADE),2),0) AS RBGRADE
        FROM 
            REVIEWBOARD A, ACADEMY B
        WHERE
            A.ACADEMY_ANO(+) = B.ANO
            AND B.ANO = #{ano, jdbcType=VARCHAR}
        GROUP BY B.ANO
	</select>
	
	<select id="subjectViewList" parameterType="subjectview" resultType="subjectview">
		SELECT
			    A.SNO,
			    A.SNAME,
			    A.SDAY,
			    A.STIME,
			    A.SPEOPLE,
			    A.SPRICE,
			    A.ACADEMY_ANO,
			    A.SDELETEYN,
			    TO_CHAR(A.SINSERTDATE,'YYYY-MM-DD') AS SINSERTDATE, 
			    TO_CHAR(A.SUPDATEDATE,'YYYY-MM-DD') AS SUPDATEDATE,
                B.ANO,
                B.ADELETEYN,
                TO_CHAR(B.AINSERTDATE,'YYYY-MM-DD') AS AINSERTDATE, 
			    TO_CHAR(B.AUPDATEDATE,'YYYY-MM-DD') AS AUPDATEDATE
		FROM 
				SUBJECT A , ACADEMY B
		WHERE A.ACADEMY_ANO(+) = B.ANO
		AND A.SDELETEYN = 'N'
		AND B.ADELETEYN = 'N'
		AND B.ANO = #{ano, jdbcType=VARCHAR}
		ORDER BY 1 DESC
	</select>
	
	<select id="reviewList" parameterType="review" resultType="review">
		SELECT
			    	A.RBNO              AS RBNO,
		            A.RBSUBJECT         AS RBSUBJECT,
		            A.RBNAME            AS RBNAME,
		            A.RBIMG             AS RBIMG,
		            A.RBCONTENT         AS RBCONTENT,
		            A.ACADEMY_ANO       AS ACADEMY_ANO,
		            A.MEMBER_MNO        AS MEMBER_MNO,
		            A.RBGRADE           AS RBGRADE,
		            A.RBDELETEYN        AS RBDELETEYN,
		            TO_CHAR(A.RBINSERTDATE,'YYYY-MM-DD')      AS RBINSERTDATE,
		            TO_CHAR(A.RBUPDATEDATE,'YYYY-MM-DD')      AS RBUPDATEDATE,
		            B.ANO				AS ANO
		FROM 
					REVIEWBOARD A, ACADEMY B
		WHERE A.ACADEMY_ANO(+) = B.ANO
		AND A.RBDELETEYN = 'N'
		AND B.ADELETEYN = 'N'
		AND B.ANO = #{ano, jdbcType=VARCHAR}
		ORDER BY 1 DESC
	</select>
	
	<insert id="insertBookmark" parameterType="academyview">
		INSERT INTO BOOKMARK
					(
					        ACADEMY_ANO, 
						    MEMBER_MNO
					)
		VALUES(
					        #{ano, jdbcType=VARCHAR},
					        #{member_mno, jdbcType=VARCHAR}
					)
	</insert>
	
	<delete id="deleteBookmark" parameterType="academyview">
		DELETE FROM BOOKMARK 
		WHERE 
				MEMBER_MNO=#{member_mno, jdbcType=VARCHAR}
		AND		ACADEMY_ANO= #{ano, jdbcType=VARCHAR}
	</delete>
	
	<select id="selectBookmark" parameterType="academyview" resultType="academyview">
		
		SELECT
			    A.ACADEMY_ANO,
			    A.MEMBER_MNO
		FROM 
				BOOKMARK A
		WHERE ACADEMY_ANO=#{academy_ano, jdbcType=VARCHAR}
		AND MEMBER_MNO=#{member_mno, jdbcType=VARCHAR}
		ORDER BY 1 DESC
		
	</select>
	
	<select id="selectReser" parameterType="academyview" resultType="reser">
	<if test="member_mno != null">
	SELECT TTNO, TTTIME, TTDATE, TTPEOPLE, NVL(PE,0) AS NOW,ROWNUM, NVL(CHK,0) AS CHK
	FROM (  SELECT  A.TTNO, 
	                A.ACADEMY_ANO, 
	                TO_CHAR(A.TTDATE,'YYYY-MM-DD') AS TTDATE, 
	                A.TTTIME, 
	                A.TTPEOPLE, 
	                B.PE ,
	                C.CHK
	        FROM    TIMETABLE A, 
	                (   SELECT COUNT(A.RENO) AS PE, 
	                            B.TTNO
	                    FROM    RESERVATION A, 
	                            TIMETABLE B
	                    WHERE   A.TIME_TTNO = B.TTNO
	                    GROUP BY B.TTNO) B,
	                    (SELECT COUNT(A.RENO) AS CHK, 
	                            A.TIME_TTNO AS TTNO
	                    FROM    RESERVATION A, 
	                            TIMETABLE B 
	                    WHERE   A.TIME_TTNO = B.TTNO 
	                    AND     A.MEMBER_MNO = #{member_mno}
	                    group by a.time_ttno) C
	        WHERE   A.TTNO = B.TTNO(+)
	        AND     A.TTNO = C.TTNO(+)
	        AND     A.ACADEMY_ANO = #{ano}
	        AND     A.TTDATE > TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	        ORDER BY A.TTDATE)
    <![CDATA[WHERE   ROWNUM <= 5 ]]>
	</if>
	<if test="member_mno == null">
	SELECT TTNO, TTTIME, TTDATE, TTPEOPLE, NVL(PE,0) AS NOW, ROWNUM
	FROM (  SELECT  A.TTNO, 
	                A.ACADEMY_ANO, 
	                TO_CHAR(A.TTDATE,'YYYY-MM-DD') AS TTDATE, 
	                A.TTTIME, 
	                A.TTPEOPLE, 
	                B.PE 
	        FROM    TIMETABLE A, 
	                (   SELECT COUNT(A.RENO) AS PE, 
	                            B.TTNO
	                    FROM    RESERVATION A, 
	                            TIMETABLE B
	                    WHERE   A.TIME_TTNO = B.TTNO
	                    GROUP BY B.TTNO) B
	        WHERE   A.TTNO = B.TTNO(+)
	        AND     A.ACADEMY_ANO = #{ano}
	        AND     A.TTDATE > TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	        ORDER BY A.TTDATE)
    <![CDATA[WHERE   ROWNUM <= 5 ]]>
	</if>
	</select>
	
	<insert id="inReser" parameterType="reser">
		<selectKey keyProperty="rno" resultType="String" order="BEFORE">
		SELECT    /*+ INDEX_DESC(SYS_C0012155) */        
		          'RE'||LPAD(
		              (NVL(MAX(SUBSTR(RENO,-4)),0)+1),5,'0' 
		          )RNO
		FROM RESERVATION A
		</selectKey>
	    INSERT INTO RESERVATION(
	    	RENO,
	    	MEMBER_MNO,
	    	TIME_TTNO
	    )VALUES(
	    	#{rno},
	    	#{mno},
	    	#{ttno}
	    )
	</insert>
	
	<delete id="delReser" parameterType="reser">
		DELETE 
		FROM 	RESERVATION
		WHERE 	MEMBER_MNO = #{mno}
		AND 	TIME_TTNO = #{ttno}
	</delete>
</mapper>
